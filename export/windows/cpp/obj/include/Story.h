// Generated by Haxe 3.4.0
#ifndef INCLUDED_Story
#define INCLUDED_Story

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Story)



class HXCPP_CLASS_ATTRIBUTES Story_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Story_obj OBJ_;
		Story_obj();

	public:
		enum { _hx_ClassId = 0x174383d5 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Story")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"Story"); }

		hx::ObjectPtr< Story_obj > __new() {
			hx::ObjectPtr< Story_obj > __this = new Story_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Story_obj > __alloc(hx::Ctx *_hx_ctx) {
			Story_obj *__this = (Story_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Story_obj), false, "Story"));
			*(void **)__this = Story_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Story_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Story","\xd5","\x83","\x43","\x17"); }

		static void __boot();
		static ::Array< ::Dynamic> intro;
};


#endif /* INCLUDED_Story */ 
