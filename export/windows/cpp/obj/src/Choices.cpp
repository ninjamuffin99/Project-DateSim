// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_Choices
#include <Choices.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInput
#include <flixel/input/IFlxInput.h>
#endif
#ifndef INCLUDED_flixel_system_debug_log_LogStyle
#include <flixel/system/debug/log/LogStyle.h>
#endif
#ifndef INCLUDED_flixel_system_frontEnds_LogFrontEnd
#include <flixel/system/frontEnds/LogFrontEnd.h>
#endif
#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxEase
#include <flixel/tweens/FlxEase.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxTween
#include <flixel/tweens/FlxTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_misc_VarTween
#include <flixel/tweens/misc/VarTween.h>
#endif
#ifndef INCLUDED_flixel_ui_FlxButton
#include <flixel/ui/FlxButton.h>
#endif
#ifndef INCLUDED_flixel_ui_FlxTypedButton_flixel_text_FlxText
#include <flixel/ui/FlxTypedButton_flixel_text_FlxText.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_af3d64b3165117c1_17_new,"Choices","new",0x917ccfc4,"Choices.new","Choices.hx",17,0xe9b1542c)
HX_LOCAL_STACK_FRAME(_hx_pos_af3d64b3165117c1_23__newChoices,"Choices","_newChoices",0xbfb0a9f5,"Choices._newChoices","Choices.hx",23,0xe9b1542c)
HX_LOCAL_STACK_FRAME(_hx_pos_af3d64b3165117c1_29__newChoices,"Choices","_newChoices",0xbfb0a9f5,"Choices._newChoices","Choices.hx",29,0xe9b1542c)
HX_LOCAL_STACK_FRAME(_hx_pos_af3d64b3165117c1_50_update,"Choices","update",0xee5f3d25,"Choices.update","Choices.hx",50,0xe9b1542c)
HX_LOCAL_STACK_FRAME(_hx_pos_af3d64b3165117c1_57__getChoices,"Choices","_getChoices",0xd2100c7f,"Choices._getChoices","Choices.hx",57,0xe9b1542c)
HX_LOCAL_STACK_FRAME(_hx_pos_af3d64b3165117c1_62_deadzo,"Choices","deadzo",0xcaec6175,"Choices.deadzo","Choices.hx",62,0xe9b1542c)

void Choices_obj::__construct( ::Dynamic X, ::Dynamic Y, ::Dynamic MaxSize){
            	HX_STACKFRAME(&_hx_pos_af3d64b3165117c1_17_new)
HXLINE(  19)		this->choiceNum = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  17)		super::__construct(X,Y,MaxSize);
            	}

Dynamic Choices_obj::__CreateEmpty() { return new Choices_obj; }

void *Choices_obj::_hx_vtable = 0;

Dynamic Choices_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Choices_obj > _hx_result = new Choices_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool Choices_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x282173df) {
		if (inClassId<=(int)0x25a685e0) {
			if (inClassId<=(int)0x0b6ffd77) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0b6ffd77;
			} else {
				return inClassId==(int)0x25a685e0;
			}
		} else {
			return inClassId==(int)0x282173df;
		}
	} else {
		return inClassId==(int)0x2e105115 || inClassId==(int)0x55d2060a;
	}
}

void Choices_obj::_newChoices(::Array< ::String > wordsChoices){
            	HX_GC_STACKFRAME(&_hx_pos_af3d64b3165117c1_23__newChoices)
HXLINE(  22)		 ::Choices _gthis = hx::ObjectPtr<OBJ_>(this);
HXLINE(  25)		{
HXLINE(  25)			int _g1 = (int)0;
HXDLIN(  25)			int _g = wordsChoices->length;
HXDLIN(  25)			while((_g1 < _g)){
            				HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Choices,_gthis,int,i) HXARGC(0)
            				void _hx_run(){
            					HX_STACKFRAME(&_hx_pos_af3d64b3165117c1_29__newChoices)
HXLINE(  30)					::flixel::tweens::FlxTween_obj::tween(_gthis, ::Dynamic(hx::Anon_obj::Create(2)
            						->setFixed(0,HX_("y",79,00,00,00),(_gthis->y - (int)10))
            						->setFixed(1,HX_("alpha",5e,a7,96,21),(int)0)),((Float)0.4), ::Dynamic(hx::Anon_obj::Create(1)
            						->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::quartOut_dyn())));
HXLINE(  31)					_gthis->choicePicked = i;
HXLINE(  32)					::flixel::FlxG_obj::log->advanced(_gthis->choicePicked,::flixel::_hx_system::debug::log::LogStyle_obj::NORMAL,null());
HXLINE(  33)					_gthis->_btnPressed = true;
            				}
            				HX_END_LOCAL_FUNC0((void))

HXLINE(  25)				_g1 = (_g1 + (int)1);
HXDLIN(  25)				int i = (_g1 - (int)1);
HXLINE(  27)				int choices = wordsChoices->length;
HXLINE(  28)				::Array< ::Dynamic> _hx_tmp = this->choiceNum;
HXDLIN(  28)				int _hx_tmp1 = (::flixel::FlxG_obj::height * i);
HXDLIN(  28)				Float _hx_tmp2 = ((Float)_hx_tmp1 / (Float)(choices + (int)4));
HXDLIN(  28)				Float _hx_tmp3 = (_hx_tmp2 + ((Float)::flixel::FlxG_obj::height / (Float)(int)5));
HXDLIN(  28)				_hx_tmp[i] =  ::flixel::ui::FlxButton_obj::__alloc( HX_CTX ,(int)0,_hx_tmp3,wordsChoices->__get(i), ::Dynamic(new _hx_Closure_0(_gthis,i)));
HXLINE(  36)				this->add(this->choiceNum->__get(i).StaticCast<  ::flixel::ui::FlxButton >());
HXLINE(  38)				 ::flixel::ui::FlxButton _hx_tmp4 = this->choiceNum->__get(i).StaticCast<  ::flixel::ui::FlxButton >();
HXDLIN(  38)				_hx_tmp4->makeGraphic(::Std_obj::_hx_int((::flixel::FlxG_obj::width * ((Float)0.60))),(int)40,(int)-65536,null(),null());
HXLINE(  39)				this->choiceNum->__get(i).StaticCast<  ::flixel::ui::FlxButton >()->label->set_size((int)0);
HXLINE(  40)				this->choiceNum->__get(i).StaticCast<  ::flixel::ui::FlxButton >()->set_alpha((int)0);
HXLINE(  41)				::flixel::tweens::FlxTween_obj::tween(this->choiceNum->__get(i).StaticCast<  ::flixel::ui::FlxButton >(), ::Dynamic(hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("alpha",5e,a7,96,21),(int)1)),((Float)0.4), ::Dynamic(hx::Anon_obj::Create(2)
            					->setFixed(0,HX_("startDelay",c1,af,3d,f3),(i * ((Float)0.05)))
            					->setFixed(1,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::quadOut_dyn())));
HXLINE(  42)				::flixel::tweens::FlxTween_obj::tween(this->choiceNum->__get(i).StaticCast<  ::flixel::ui::FlxButton >()->label, ::Dynamic(hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("size",c1,a0,53,4c),(int)23)),((Float)0.4), ::Dynamic(hx::Anon_obj::Create(2)
            					->setFixed(0,HX_("startDelay",c1,af,3d,f3),(i * ((Float)0.05)))
            					->setFixed(1,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::backOut_dyn())));
            			}
            		}
HXLINE(  45)		this->set_y((this->y + (int)10));
HXLINE(  46)		::flixel::tweens::FlxTween_obj::tween(hx::ObjectPtr<OBJ_>(this), ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("y",79,00,00,00),(this->y - (int)10))),((Float)0.4), ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::quartOut_dyn())));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Choices_obj,_newChoices,(void))

void Choices_obj::update(Float elapsed){
            	HX_STACKFRAME(&_hx_pos_af3d64b3165117c1_50_update)
HXLINE(  51)		this->_btnPressed = false;
HXLINE(  52)		this->super::update(elapsed);
            	}


int Choices_obj::_getChoices(){
            	HX_STACKFRAME(&_hx_pos_af3d64b3165117c1_57__getChoices)
HXLINE(  57)		return this->choicePicked;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Choices_obj,_getChoices,return )

void Choices_obj::deadzo(){
            	HX_STACKFRAME(&_hx_pos_af3d64b3165117c1_62_deadzo)
HXLINE(  62)		this->kill();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Choices_obj,deadzo,(void))


hx::ObjectPtr< Choices_obj > Choices_obj::__new( ::Dynamic X, ::Dynamic Y, ::Dynamic MaxSize) {
	hx::ObjectPtr< Choices_obj > __this = new Choices_obj();
	__this->__construct(X,Y,MaxSize);
	return __this;
}

hx::ObjectPtr< Choices_obj > Choices_obj::__alloc(hx::Ctx *_hx_ctx, ::Dynamic X, ::Dynamic Y, ::Dynamic MaxSize) {
	Choices_obj *__this = (Choices_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Choices_obj), true, "Choices"));
	*(void **)__this = Choices_obj::_hx_vtable;
	__this->__construct(X,Y,MaxSize);
	return __this;
}

Choices_obj::Choices_obj()
{
}

void Choices_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Choices);
	HX_MARK_MEMBER_NAME(choiceNum,"choiceNum");
	HX_MARK_MEMBER_NAME(choicePicked,"choicePicked");
	HX_MARK_MEMBER_NAME(_btnPressed,"_btnPressed");
	 ::flixel::group::FlxTypedSpriteGroup_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Choices_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(choiceNum,"choiceNum");
	HX_VISIT_MEMBER_NAME(choicePicked,"choicePicked");
	HX_VISIT_MEMBER_NAME(_btnPressed,"_btnPressed");
	 ::flixel::group::FlxTypedSpriteGroup_obj::__Visit(HX_VISIT_ARG);
}

hx::Val Choices_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn()); }
		if (HX_FIELD_EQ(inName,"deadzo") ) { return hx::Val( deadzo_dyn()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"choiceNum") ) { return hx::Val( choiceNum); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_btnPressed") ) { return hx::Val( _btnPressed); }
		if (HX_FIELD_EQ(inName,"_newChoices") ) { return hx::Val( _newChoices_dyn()); }
		if (HX_FIELD_EQ(inName,"_getChoices") ) { return hx::Val( _getChoices_dyn()); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"choicePicked") ) { return hx::Val( choicePicked); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Choices_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"choiceNum") ) { choiceNum=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_btnPressed") ) { _btnPressed=inValue.Cast< bool >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"choicePicked") ) { choicePicked=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Choices_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("choiceNum","\x65","\xe9","\xca","\x16"));
	outFields->push(HX_HCSTRING("choicePicked","\xc1","\x6d","\x8c","\xe6"));
	outFields->push(HX_HCSTRING("_btnPressed","\xc5","\x48","\x54","\x9f"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Choices_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(Choices_obj,choiceNum),HX_HCSTRING("choiceNum","\x65","\xe9","\xca","\x16")},
	{hx::fsInt,(int)offsetof(Choices_obj,choicePicked),HX_HCSTRING("choicePicked","\xc1","\x6d","\x8c","\xe6")},
	{hx::fsBool,(int)offsetof(Choices_obj,_btnPressed),HX_HCSTRING("_btnPressed","\xc5","\x48","\x54","\x9f")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Choices_obj_sStaticStorageInfo = 0;
#endif

static ::String Choices_obj_sMemberFields[] = {
	HX_HCSTRING("choiceNum","\x65","\xe9","\xca","\x16"),
	HX_HCSTRING("choicePicked","\xc1","\x6d","\x8c","\xe6"),
	HX_HCSTRING("_btnPressed","\xc5","\x48","\x54","\x9f"),
	HX_HCSTRING("_newChoices","\x91","\xa6","\xa3","\xe8"),
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	HX_HCSTRING("_getChoices","\x1b","\x09","\x03","\xfb"),
	HX_HCSTRING("deadzo","\x59","\xaa","\x92","\x63"),
	::String(null()) };

static void Choices_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Choices_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Choices_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Choices_obj::__mClass,"__mClass");
};

#endif

hx::Class Choices_obj::__mClass;

void Choices_obj::__register()
{
	hx::Object *dummy = new Choices_obj;
	Choices_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("Choices","\xd2","\xdd","\x68","\xa6");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Choices_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Choices_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Choices_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Choices_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Choices_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Choices_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

