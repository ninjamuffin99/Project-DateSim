// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_Choices
#include <Choices.h>
#endif
#ifndef INCLUDED_PlayState
#include <PlayState.h>
#endif
#ifndef INCLUDED_Scene_Intro
#include <Scene_Intro.h>
#endif
#ifndef INCLUDED_Story
#include <Story.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxGame
#include <flixel/FlxGame.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_input_FlxBaseKeyList
#include <flixel/input/FlxBaseKeyList.h>
#endif
#ifndef INCLUDED_flixel_input_FlxKeyManager
#include <flixel/input/FlxKeyManager.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInputManager
#include <flixel/input/IFlxInputManager.h>
#endif
#ifndef INCLUDED_flixel_input_keyboard_FlxKeyList
#include <flixel/input/keyboard/FlxKeyList.h>
#endif
#ifndef INCLUDED_flixel_input_keyboard_FlxKeyboard
#include <flixel/input/keyboard/FlxKeyboard.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_DisplayObject
#include <openfl/_legacy/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_DisplayObjectContainer
#include <openfl/_legacy/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_IBitmapDrawable
#include <openfl/_legacy/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_InteractiveObject
#include <openfl/_legacy/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_Sprite
#include <openfl/_legacy/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_EventDispatcher
#include <openfl/_legacy/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_IEventDispatcher
#include <openfl/_legacy/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c1cb56f00f0d0745_8_new,"Scene_Intro","new",0xbe54652b,"Scene_Intro.new","Scene_Intro.hx",8,0x08e3a8a5)
HX_LOCAL_STACK_FRAME(_hx_pos_c1cb56f00f0d0745_12_create,"Scene_Intro","create",0xd7d1a311,"Scene_Intro.create","Scene_Intro.hx",12,0x08e3a8a5)
static const ::String _hx_array_data_a701f3b9_2[] = {
	HX_("Here is one choice!",c0,56,b4,52),HX_("Here is another choice!",1d,6d,09,b5),HX_("and another!!!!",3a,7b,19,67),
};
HX_LOCAL_STACK_FRAME(_hx_pos_c1cb56f00f0d0745_20_update,"Scene_Intro","update",0xe2c7c21e,"Scene_Intro.update","Scene_Intro.hx",20,0x08e3a8a5)
static const ::String _hx_array_data_a701f3b9_4[] = {
	HX_("You picked choice 1!",10,8d,f0,a7),HX_("Press R to Reset!",0c,7e,b8,8a),
};
static const ::String _hx_array_data_a701f3b9_5[] = {
	HX_("You picked choice 2!",ef,8d,f0,a7),HX_("Press R to Reset!",0c,7e,b8,8a),
};
static const ::String _hx_array_data_a701f3b9_6[] = {
	HX_("You picked choice 3!",ce,8e,f0,a7),HX_("Press R to Reset!",0c,7e,b8,8a),
};

void Scene_Intro_obj::__construct( ::Dynamic MaxSize){
            	HX_STACKFRAME(&_hx_pos_c1cb56f00f0d0745_8_new)
HXLINE(   8)		super::__construct(MaxSize);
            	}

Dynamic Scene_Intro_obj::__CreateEmpty() { return new Scene_Intro_obj; }

void *Scene_Intro_obj::_hx_vtable = 0;

Dynamic Scene_Intro_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Scene_Intro_obj > _hx_result = new Scene_Intro_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Scene_Intro_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x3634c52c) {
		if (inClassId<=(int)0x25a685e0) {
			if (inClassId<=(int)0x2335d9a7) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x2335d9a7;
			} else {
				return inClassId==(int)0x25a685e0;
			}
		} else {
			return inClassId==(int)0x3634c52c;
		}
	} else {
		return inClassId==(int)0x46c2835d || inClassId==(int)0x55c8c5d5;
	}
}

void Scene_Intro_obj::create(){
            	HX_STACKFRAME(&_hx_pos_c1cb56f00f0d0745_12_create)
HXLINE(  13)		this->super::create();
HXLINE(  15)		this->_dialogueStart(::Story_obj::intro->__get((int)0).StaticCast< ::Array< ::String > >(),null(),null());
HXLINE(  16)		this->_choices->_newChoices(::Array_obj< ::String >::fromData( _hx_array_data_a701f3b9_2,3));
            	}


void Scene_Intro_obj::update(Float elapsed){
            	HX_STACKFRAME(&_hx_pos_c1cb56f00f0d0745_20_update)
HXLINE(  21)		if (this->_choices->_btnPressed) {
HXLINE(  23)			if ((this->_choices->_getChoices() == (int)0)) {
HXLINE(  24)				this->_dialogueStart(::Array_obj< ::String >::fromData( _hx_array_data_a701f3b9_4,2),null(),null());
            			}
HXLINE(  25)			if ((this->_choices->_getChoices() == (int)1)) {
HXLINE(  26)				this->_dialogueStart(::Array_obj< ::String >::fromData( _hx_array_data_a701f3b9_5,2),null(),null());
            			}
HXLINE(  27)			if ((this->_choices->_getChoices() == (int)2)) {
HXLINE(  28)				this->_dialogueStart(::Array_obj< ::String >::fromData( _hx_array_data_a701f3b9_6,2),null(),null());
            			}
            		}
HXLINE(  31)		 ::flixel::input::keyboard::FlxKeyList _this = ( ( ::flixel::input::keyboard::FlxKeyList)(::flixel::FlxG_obj::keys->justPressed) );
HXDLIN(  31)		if (_this->keyManager->checkStatus((int)82,_this->status)) {
HXLINE(  32)			::flixel::FlxG_obj::game->_resetGame = true;
            		}
HXLINE(  34)		this->super::update(elapsed);
            	}



hx::ObjectPtr< Scene_Intro_obj > Scene_Intro_obj::__new( ::Dynamic MaxSize) {
	hx::ObjectPtr< Scene_Intro_obj > __this = new Scene_Intro_obj();
	__this->__construct(MaxSize);
	return __this;
}

hx::ObjectPtr< Scene_Intro_obj > Scene_Intro_obj::__alloc(hx::Ctx *_hx_ctx, ::Dynamic MaxSize) {
	Scene_Intro_obj *__this = (Scene_Intro_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Scene_Intro_obj), true, "Scene_Intro"));
	*(void **)__this = Scene_Intro_obj::_hx_vtable;
	__this->__construct(MaxSize);
	return __this;
}

Scene_Intro_obj::Scene_Intro_obj()
{
}

hx::Val Scene_Intro_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { return hx::Val( create_dyn()); }
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Scene_Intro_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Scene_Intro_obj_sStaticStorageInfo = 0;
#endif

static ::String Scene_Intro_obj_sMemberFields[] = {
	HX_HCSTRING("create","\xfc","\x66","\x0f","\x7c"),
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	::String(null()) };

static void Scene_Intro_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Scene_Intro_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Scene_Intro_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Scene_Intro_obj::__mClass,"__mClass");
};

#endif

hx::Class Scene_Intro_obj::__mClass;

void Scene_Intro_obj::__register()
{
	hx::Object *dummy = new Scene_Intro_obj;
	Scene_Intro_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("Scene_Intro","\xb9","\xf3","\x01","\xa7");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Scene_Intro_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Scene_Intro_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Scene_Intro_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Scene_Intro_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Scene_Intro_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Scene_Intro_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

