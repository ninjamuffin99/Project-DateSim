// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED___ASSET__assets_data_typo_round_typo_round_light_demo_otf
#include <__ASSET__assets_data_typo_round_typo_round_light_demo_otf.h>
#endif
#ifndef INCLUDED_openfl__legacy_text_Font
#include <openfl/_legacy/text/Font.h>
#endif
#ifndef INCLUDED_openfl__legacy_text_FontStyle
#include <openfl/_legacy/text/FontStyle.h>
#endif
#ifndef INCLUDED_openfl__legacy_text_FontType
#include <openfl/_legacy/text/FontType.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_27c607402f476cd9_579_new,"__ASSET__assets_data_typo_round_typo_round_light_demo_otf","new",0xbfc8b849,"__ASSET__assets_data_typo_round_typo_round_light_demo_otf.new","DefaultAssetLibrary.hx",579,0x0fc48912)

void __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_27c607402f476cd9_579_new)
HXLINE( 579)		super::__construct(null(),null(),null());
HXDLIN( 579)		this->_hx___fontPath = HX_("assets/data/typo_round/Typo_Round_Light_Demo.otf",08,22,91,d5);
HXDLIN( 579)		this->fontName = HX_("Typo Round Light Demo",5b,94,fb,e0);
            	}

Dynamic __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj::__CreateEmpty() { return new __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj; }

void *__ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj::_hx_vtable = 0;

Dynamic __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj > _hx_result = new __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x03349af3) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x03349af3;
	} else {
		return inClassId==(int)0x67f42b74;
	}
}


hx::ObjectPtr< __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj > __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj::__new() {
	hx::ObjectPtr< __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj > __this = new __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj > __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj::__alloc(hx::Ctx *_hx_ctx) {
	__ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj *__this = (__ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(__ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj), true, "__ASSET__assets_data_typo_round_typo_round_light_demo_otf"));
	*(void **)__this = __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

__ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj::__ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj()
{
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *__ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *__ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj_sStaticStorageInfo = 0;
#endif

static void __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(__ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(__ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj::__mClass,"__mClass");
};

#endif

hx::Class __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj::__mClass;

void __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj::__register()
{
	hx::Object *dummy = new __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj;
	__ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("__ASSET__assets_data_typo_round_typo_round_light_demo_otf","\xd7","\xdf","\x8a","\xed");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = __ASSET__assets_data_typo_round_typo_round_light_demo_otf_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

