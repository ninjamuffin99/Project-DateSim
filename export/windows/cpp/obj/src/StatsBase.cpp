// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_StatsBase
#include <StatsBase.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_util_FlxSave
#include <flixel/util/FlxSave.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_05f577d2eaeb2781_13_new,"StatsBase","new",0xe27f9ea2,"StatsBase.new","StatsBase.hx",13,0xd43e8b0e)
HX_LOCAL_STACK_FRAME(_hx_pos_05f577d2eaeb2781_17_load,"StatsBase","load",0x4be045a4,"StatsBase.load","StatsBase.hx",17,0xd43e8b0e)
HX_LOCAL_STACK_FRAME(_hx_pos_05f577d2eaeb2781_22_save,"StatsBase","save",0x507636bb,"StatsBase.save","StatsBase.hx",22,0xd43e8b0e)
HX_LOCAL_STACK_FRAME(_hx_pos_05f577d2eaeb2781_10_boot,"StatsBase","boot",0x45442fb0,"StatsBase.boot","StatsBase.hx",10,0xd43e8b0e)
HX_LOCAL_STACK_FRAME(_hx_pos_05f577d2eaeb2781_11_boot,"StatsBase","boot",0x45442fb0,"StatsBase.boot","StatsBase.hx",11,0xd43e8b0e)

void StatsBase_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_05f577d2eaeb2781_13_new)
            	}

Dynamic StatsBase_obj::__CreateEmpty() { return new StatsBase_obj; }

void *StatsBase_obj::_hx_vtable = 0;

Dynamic StatsBase_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< StatsBase_obj > _hx_result = new StatsBase_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool StatsBase_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0f550be8;
}

int StatsBase_obj::_attraction;

int StatsBase_obj::_dates;

void StatsBase_obj::load(){
            	HX_STACKFRAME(&_hx_pos_05f577d2eaeb2781_17_load)
HXLINE(  18)		::StatsBase_obj::_attraction = ( (int)(::flixel::FlxG_obj::save->data->__Field(HX_("_attraction",c6,a0,d5,c9),hx::paccDynamic)) );
HXLINE(  19)		::StatsBase_obj::_dates = ( (int)(::flixel::FlxG_obj::save->data->__Field(HX_("_dates",c6,59,6f,d0),hx::paccDynamic)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(StatsBase_obj,load,(void))

void StatsBase_obj::save(){
            	HX_STACKFRAME(&_hx_pos_05f577d2eaeb2781_22_save)
HXLINE(  23)		::flixel::FlxG_obj::save->data->__SetField(HX_("_attraction",c6,a0,d5,c9),::StatsBase_obj::_attraction,hx::paccDynamic);
HXLINE(  24)		::flixel::FlxG_obj::save->data->__SetField(HX_("_dates",c6,59,6f,d0),::StatsBase_obj::_dates,hx::paccDynamic);
HXLINE(  26)		::flixel::FlxG_obj::save->flush(null(),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(StatsBase_obj,save,(void))


StatsBase_obj::StatsBase_obj()
{
}

bool StatsBase_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"load") ) { outValue = load_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"save") ) { outValue = save_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"_dates") ) { outValue = _dates; return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_attraction") ) { outValue = _attraction; return true; }
	}
	return false;
}

bool StatsBase_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"_dates") ) { _dates=ioValue.Cast< int >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_attraction") ) { _attraction=ioValue.Cast< int >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *StatsBase_obj_sMemberStorageInfo = 0;
static hx::StaticInfo StatsBase_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &StatsBase_obj::_attraction,HX_HCSTRING("_attraction","\xc6","\xa0","\xd5","\xc9")},
	{hx::fsInt,(void *) &StatsBase_obj::_dates,HX_HCSTRING("_dates","\xc6","\x59","\x6f","\xd0")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void StatsBase_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(StatsBase_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(StatsBase_obj::_attraction,"_attraction");
	HX_MARK_MEMBER_NAME(StatsBase_obj::_dates,"_dates");
};

#ifdef HXCPP_VISIT_ALLOCS
static void StatsBase_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(StatsBase_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(StatsBase_obj::_attraction,"_attraction");
	HX_VISIT_MEMBER_NAME(StatsBase_obj::_dates,"_dates");
};

#endif

hx::Class StatsBase_obj::__mClass;

static ::String StatsBase_obj_sStaticFields[] = {
	HX_HCSTRING("_attraction","\xc6","\xa0","\xd5","\xc9"),
	HX_HCSTRING("_dates","\xc6","\x59","\x6f","\xd0"),
	HX_HCSTRING("load","\x26","\x9a","\xb7","\x47"),
	HX_HCSTRING("save","\x3d","\x8b","\x4d","\x4c"),
	::String(null())
};

void StatsBase_obj::__register()
{
	hx::Object *dummy = new StatsBase_obj;
	StatsBase_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("StatsBase","\xb0","\x65","\x27","\xd5");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &StatsBase_obj::__GetStatic;
	__mClass->mSetStaticField = &StatsBase_obj::__SetStatic;
	__mClass->mMarkFunc = StatsBase_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(StatsBase_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< StatsBase_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = StatsBase_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StatsBase_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StatsBase_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void StatsBase_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_05f577d2eaeb2781_10_boot)
HXLINE(  10)		_attraction = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_05f577d2eaeb2781_11_boot)
HXLINE(  11)		_dates = (int)1;
            	}
}

