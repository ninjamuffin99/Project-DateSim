// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_Phone
#include <Phone.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_6e44001d06993d76_14_new,"Phone","new",0x71339340,"Phone.new","Phone.hx",14,0xbf129430)

void Phone_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_6e44001d06993d76_14_new)
HXLINE(  15)		super::__construct(null(),null(),null());
HXLINE(  17)		this->_bg =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,null(),null(),null());
HXLINE(  18)		this->_bg->makeGraphic((int)550,(int)660,null(),null(),null());
HXLINE(  19)		this->add(this->_bg);
            	}

Dynamic Phone_obj::__CreateEmpty() { return new Phone_obj; }

void *Phone_obj::_hx_vtable = 0;

Dynamic Phone_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Phone_obj > _hx_result = new Phone_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Phone_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x282173df) {
		if (inClassId<=(int)0x25a685e0) {
			if (inClassId<=(int)0x0b6ffd77) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0b6ffd77;
			} else {
				return inClassId==(int)0x25a685e0;
			}
		} else {
			return inClassId==(int)0x282173df;
		}
	} else {
		return inClassId==(int)0x2e105115 || inClassId==(int)0x5521334e;
	}
}


hx::ObjectPtr< Phone_obj > Phone_obj::__new() {
	hx::ObjectPtr< Phone_obj > __this = new Phone_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< Phone_obj > Phone_obj::__alloc(hx::Ctx *_hx_ctx) {
	Phone_obj *__this = (Phone_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Phone_obj), true, "Phone"));
	*(void **)__this = Phone_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Phone_obj::Phone_obj()
{
}

void Phone_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Phone);
	HX_MARK_MEMBER_NAME(_bg,"_bg");
	 ::flixel::group::FlxTypedSpriteGroup_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Phone_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_bg,"_bg");
	 ::flixel::group::FlxTypedSpriteGroup_obj::__Visit(HX_VISIT_ARG);
}

hx::Val Phone_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"_bg") ) { return hx::Val( _bg); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Phone_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"_bg") ) { _bg=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Phone_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("_bg","\xe4","\x6b","\x48","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Phone_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::flixel::FlxSprite*/ ,(int)offsetof(Phone_obj,_bg),HX_HCSTRING("_bg","\xe4","\x6b","\x48","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Phone_obj_sStaticStorageInfo = 0;
#endif

static ::String Phone_obj_sMemberFields[] = {
	HX_HCSTRING("_bg","\xe4","\x6b","\x48","\x00"),
	::String(null()) };

static void Phone_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Phone_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Phone_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Phone_obj::__mClass,"__mClass");
};

#endif

hx::Class Phone_obj::__mClass;

void Phone_obj::__register()
{
	hx::Object *dummy = new Phone_obj;
	Phone_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("Phone","\x4e","\x33","\x21","\x55");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Phone_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Phone_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Phone_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Phone_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Phone_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Phone_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

